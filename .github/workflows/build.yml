name: Build All Platforms
run-name: "Build All Platforms: ${{ github.actor }} ðŸš€"
on:
  push:
    tags:
      - 'v*'
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  Build-Desktop:
    strategy:
        matrix:
          include:
          - os: windows
            make_cmd: wrebuild
            suffix: zip
          - os: macos
            make_cmd: xrebuild
            suffix: tgz
          - os: ubuntu
            make_cmd: brebuild
            suffix: tgz
    runs-on: ${{ matrix.os }}-latest
    steps:
      - run: pip install --upgrade cppclean
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Configure CMake
        run: make ${{ matrix.make_cmd}}
      - name: Save packaged artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: build/SupergoonDash.${{ matrix.suffix }}
  # Build-Ubuntu:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: pip install --upgrade cppclean
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - name: Configure CMake
  #       run: make brebuild
  #     - name: Save packaged artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: linux-artifacts
  #         path: build/SupergoonDash.tgz
  # Build-Macos:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - name: Configure CMake
  #       run: make xrebuild
  #     - name: Save packaged artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: mac-artifacts
  #         path: build/SupergoonDash.tgz
  # Build-Windows:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - name: Configure CMake
  #       run: make wrebuild
  #     - name: Save packaged artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: windows-artifacts
  #         path: build/SupergoonDash.zip
  # Use container as for some reason has permissions issues on a regular runner when I install emscripten.
  Build-Emscripten:
    runs-on: ubuntu-latest
    container:
      image: emscripten/emsdk:3.1.46
      env:
        thing: thing
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: repo
          submodules: recursive
      - name: Install CMake
        run: |
          apt update -y && apt upgrade -y
          apt install cmake pkg-config -y
          # apt install cmake libfreetype6 libfreetype-dev pkg-config -y
          # dpkg-query -L libfreetype6 | grep libfreetype
          # dpkg-query -L libfreetype6-dev
          # git config --global --add safe.directory $(pwd)
          # git config --global --add safe.directory .
      - name: Actual build
        run: cd repo && make erebuild
      - uses: actions/upload-artifact@v3
        name: Upload to S3
        with:
          name: s3Artifact
          path: repo/build/bin
  Push-Files-To-S3:
    uses: supergoongaming/sharedWorkflows/.github/workflows/push_to_s3.yml@master
    needs: Build-Emscripten
    secrets:
      IAM_SECRET: ${{ secrets.IAM_SECRET }}
    with:
      IAM_USER: ${{ vars.IAM_USER }}
      bucket_region: "us-east-1"
      bucket_name: "supergoon-dash-external-site"
  Create-Release:
    strategy:
        matrix:
          include:
          - os: windows
            artifact_name: SupergoonDash.zip
            asset_name: supergoon_win.zip
          - os: macos
            artifact_name: SupergoonDash.tgz
            asset_name: supergoon_mac.zip
          - os: ubuntu
            artifact_name: SupergoonDash.tgz
            asset_name: supergoon_ubuntu.zip
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
    - Build-Desktop
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Fetch tags
        run: git fetch --tags --force
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}-artifacts
      - name: Get current tag annotation
        id: tag-data
        uses: ericcornelissen/git-tag-annotation-action@v2

      - name: Upload binaries to release
        env:
          ANNOTATION: ${{ steps.tag-data.outputs.git-tag-annotation }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
          body: "$ANNOTATION"