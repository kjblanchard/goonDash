name: Build All Platforms
run-name: "Build All Platforms: ${{ github.actor }} 🚀"
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  # Build-Linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: pip install --upgrade cppclean
  #     - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
  #     - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #     - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
  #     - run: echo "🖥️ The workflow is now ready to test your code on the runner."
  #     - name: List files in the repository
  #       run: |
  #         ls ${{ github.workspace }}
  #     - name: Configure CMake
  #       run: |
  #         make brebuild
  #     - run: echo "🍏 This job's status is ${{ job.status }}."
  # Build-Macos:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - name: Configure CMake
  #       run: make xrebuild
  Build-Emscripten:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: emscripten-core/emsdk
          ref: 3.1.44
          path: emsdk
      - name: Install emscripten
        run: cd emsdk && ./emsdk install latest && ./emsdk activate latest && source "/home/runner/work/goonDash/goonDash/emsdk/emsdk_env.sh" && echo 'source "/home/runner/work/goonDash/goonDash/emsdk/emsdk_env.sh"' >> $HOME/.bash_profile && echo Done!
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Configure CMake
        run: make erebuild
  # Build-Windows:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - name: Configure CMake
  #       run: make wrebuild
