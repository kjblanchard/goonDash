name: Build All Platforms
run-name: "Build All Platforms: ${{ github.actor }} üöÄ"
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  Build-Linux:
    runs-on: ubuntu-latest
    steps:
      - run: pip install --upgrade cppclean
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Configure CMake
        run: make brebuild
      - run: echo "üçè This job's status is ${{ job.status }}."
  Build-Macos:
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Configure CMake
        run: make xrebuild
  # Use container as for some reason has permissions issues on a regular runner when I install emscripten.
  Build-Emscripten:
    runs-on: ubuntu-latest
    container:
      image: emscripten/emsdk:3.1.46
      env:
        thing: thing
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: repo
          submodules: recursive
      - name: Install CMake
        run: |
          apt update -y && apt upgrade -y
          apt install cmake pkg-config -y
          # git config --global --add safe.directory $(pwd)
          # git config --global --add safe.directory .
      - name: Actual build
        run: make erebuild
      - uses: actions/upload-artifact@v3
        name: Upload to S3
        with:
          name: s3Artifact
          path: repo/build/bin
  Push-Files-To-S3:
    uses: supergoongaming/sharedWorkflows/.github/workflows/push_to_s3.yml@master
    needs: Build-Emscripten
    secrets:
      IAM_SECRET: ${{ secrets.IAM_SECRET }}
    with:
      IAM_USER: ${{ vars.IAM_USER }}
      bucket_region: "us-east-1"
      bucket_name: "supergoon-dash-external-site"
  Build-Windows:
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Configure CMake
        run: make wrebuild
